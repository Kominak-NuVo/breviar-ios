//
//  BRPrayerViewController.m
//  Breviar
//
//  Created by Gyimesi Akos on 9/7/12.
//
//

#import "BRPrayerViewController.h"
#import "BRSettings.h"
#import "GAI.h"
#import "GAIFields.h"
#import "GAIDictionaryBuilder.h"

@interface BRPrayerViewController ()
@property(strong) UITapGestureRecognizer *tapGesture;
@end

@implementation BRPrayerViewController

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    
}

- (void)viewWillAppear:(BOOL)animated {
    self.navigationItem.title = self.prayer.title;
    
    // The body will get generated on demand, if it hasn't been already generated by previous request
    self.htmlContent = [NSString stringWithFormat:@"<div id=\"prayer-%@\">%@</div>", self.prayer.queryId, self.prayer.body];
    [super viewWillAppear:animated];

    // Google Analytics
    id<GAITracker> tracker = [[GAI sharedInstance] defaultTracker];
    [tracker set:kGAIScreenName value:[NSString stringWithFormat:@"Prayer/%@", self.prayer.prayerName]];
    [tracker send:[[GAIDictionaryBuilder createAppView] build]];
}

- (void)viewDidAppear:(BOOL)animated
{
    [super viewDidAppear:animated];
    
    // Add gesture recognizer
    self.tapGesture = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(showHideNavbar:)];
    self.tapGesture.delegate = self;
    [self.view addGestureRecognizer:self.tapGesture];
}

- (void)viewDidDisappear:(BOOL)animated
{
    [super viewDidDisappear:animated];
    
    // Remove gesture recognizer
    if (self.tapGesture) {
        [self.view removeGestureRecognizer:self.tapGesture];
        self.tapGesture = nil;
    }
}

- (void)showHideNavbar:(id)sender
{
    // On small scrolling events UIKit
	if (self.webView.scrollingInProgress || [self.webView hadRecentScrolling]) {
		return;
	}
	
    BOOL navbarHidden = [UIApplication sharedApplication].isStatusBarHidden;
    
    if (navbarHidden) {
        self.navigationController.navigationBarHidden = NO;
        self.navigationController.navigationBar.alpha = 0;
    }
    
    [UIView animateWithDuration:UINavigationControllerHideShowBarDuration
                     animations:^{
                         [[UIApplication sharedApplication] setStatusBarHidden:!navbarHidden withAnimation:UIStatusBarAnimationFade];
                         self.navigationController.navigationBar.alpha = navbarHidden ? 1.0 : 0.0;
                     }
                     completion:^(BOOL finished) {
                         if (finished && !navbarHidden) {
                             self.navigationController.navigationBarHidden = YES;
                         }
                     }
     ];
}

- (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)otherGestureRecognizer
{
    return YES;
}

@end
